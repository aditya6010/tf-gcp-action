name:  TF Automation
on:
    workflow_dispatch:
        inputs:
            workspace-env:
                description: "workspace to be create"
                type: choice
                required: true
                options:
                    - dev
                    - qa
                    - prod
                default: dev
            apply_change:
                description: "Select apply or destroy"
                type: choice
                options:
                  - select apply/destroy
                  - apply
                  - destroy
                


jobs:
    terraform_plan:
        name: 'Terraform Plan'
        runs-on: ubuntu-latest
        
        steps:
            - name: Checkout
              uses: actions/checkout@v3
            
            - id: 'auth'
              uses: 'google-github-actions/auth@v1'
              with:
                credentials_json: '${{ secrets.GCP_SA_KEY }}'
            
            - name: 'Set up Cloud SDK'
              uses: 'google-github-actions/setup-gcloud@v1'
            - name: debug
              run: |
                 terraform -v
              shell: bash
           
            - name: Terraform Init
              continue-on-error: true
              run: |
                    
                    env_name=${{ inputs.workspace-env }}
                    chmod +x "${GITHUB_WORKSPACE}/.github/workflows/tf_init.sh"
                    "${GITHUB_WORKSPACE}/.github/workflows/tf_init.sh"

                    chmod +x "${GITHUB_WORKSPACE}/.github/workflows/tf_fmt.sh"
                    "${GITHUB_WORKSPACE}/.github/workflows/tf_fmt.sh"

                    chmod +x "${GITHUB_WORKSPACE}/.github/workflows/tf_plan_check.sh"
                    "${GITHUB_WORKSPACE}/.github/workflows/tf_plan_check.sh"
                    
                    terraform workspace select -or-create ${{inputs.workspace-env }}
              shell: bash
            
            - name: Terraform Plan
              run: |
                terraform plan -out tf_plan  -var-file="${{inputs.workspace-env}}.tfvars" 

            - name: Upload TF Plan
              uses: actions/upload-artifact@v2
              with:
                name: tf_plan
                path: ./tf_plan
                if-no-files-found: error
                retention-days: 1
    
    terraform_apply:
        name: 'Terraform Apply'
        runs-on: ubuntu-latest
        if:  inputs.apply_change == "apply"
        needs: terraform_plan
        environment:
            name: ${{inputs.workspace-env}}
        
        steps:
            - name: Checkout
              uses: actions/checkout@v3
            
            - id: 'auth'
              uses: 'google-github-actions/auth@v1'
              with:
                credentials_json: '${{ secrets.GCP_SA_KEY }}'
            
            - name: 'Set up Cloud SDK'
              uses: 'google-github-actions/setup-gcloud@v1'
            
            - name: Download TF Plan
              uses: actions/download-artifact@v2
              with:
                name: tf_plan
                path: ./
            
            # Provision resources via Terraform        
            - name: Terraform Apply
              run: |
                
                chmod +x "${GITHUB_WORKSPACE}/.github/workflows/tf_init.sh"
                "${GITHUB_WORKSPACE}/.github/workflows/tf_init.sh"
                terraform workspace select -or-create ${{inputs.workspace-env }}
                terraform show "tf_plan"
                terraform apply "tf_plan"

    terraform_destroy:
        name: 'Terraform Destroy'
        runs-on: ubuntu-latest
        if:  inputs.apply_change == "destroy"
        needs: terraform_plan
        environment:
            name: ${{inputs.workspace-env}}
        
        steps:
            - name: Checkout
              uses: actions/checkout@v3
            
            - id: 'auth'
              uses: 'google-github-actions/auth@v1'
              with:
                credentials_json: '${{ secrets.GCP_SA_KEY }}'
            
            - name: 'Set up Cloud SDK'
              uses: 'google-github-actions/setup-gcloud@v1'
            
            # Destroy resources via Terraform        
            - name: Terraform Apply
              run: |
                
                chmod +x "${GITHUB_WORKSPACE}/.github/workflows/tf_init.sh"
                "${GITHUB_WORKSPACE}/.github/workflows/tf_init.sh"
                terraform workspace select -or-create ${{inputs.workspace-env }}
                terraform destroy -var-file="${{inputs.workspace-env}}.tfvars" 
                 
            






